# Generated by Django 4.1.5 on 2023-02-09 04:32

from django.db import migrations, models
import django.db.models.deletion
import time


class Migration(migrations.Migration):

    dependencies = [
        ('getrecords', '0004_knownopenplanettoken'),
    ]

    operations = [
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(db_index=True, max_length=36, unique=True)),
                ('map_id', models.CharField(db_index=True, max_length=48, unique=True)),
                ('name', models.TextField(max_length=256)),
                ('url', models.TextField(max_length=256)),
                ('thumbnail_url', models.TextField(max_length=256)),
                ('tmx_track_id', models.IntegerField(default=-123)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wsid', models.CharField(db_index=True, max_length=48, unique=True)),
                ('display_name', models.CharField(db_index=True, max_length=64)),
                ('first_seen_ts', models.IntegerField(default=time.time)),
                ('last_seen_ts', models.IntegerField(default=time.time)),
            ],
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_runs', models.IntegerField(default=0)),
                ('partial_runs', models.IntegerField(default=0)),
                ('unique_maps', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='getrecords.user')),
            ],
        ),
        migrations.CreateModel(
            name='TrackStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_runs', models.IntegerField(default=0)),
                ('partial_runs', models.IntegerField(default=0)),
                ('unique_users', models.IntegerField(default=0)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='getrecords.track')),
            ],
        ),
        migrations.CreateModel(
            name='Ghost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=128)),
                ('timestamp', models.IntegerField(default=time.time)),
                ('hash_hex', models.CharField(max_length=64)),
                ('partial', models.BooleanField()),
                ('duration', models.IntegerField()),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='getrecords.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='getrecords.user')),
            ],
            options={
                'index_together': {('user', 'track')},
            },
        ),
        migrations.CreateModel(
            name='UserTrackPlay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partial', models.BooleanField()),
                ('score', models.IntegerField()),
                ('timestamp', models.IntegerField(default=time.time)),
                ('ghost', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='getrecords.ghost')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='getrecords.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='getrecords.user')),
            ],
            options={
                'index_together': {('user', 'track')},
            },
        ),
    ]
